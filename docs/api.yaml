openapi: 3.0.3
info:
  description: FY24卒Web開発研修6班のAPI仕様書です
  title: Web開発研修6班 API
  version: 1.0.0
servers:
- url: http://localhost:9000
paths:
  /:
    get:
      operationId: healthCheck
      responses:
        "204":
          description: No Content
      summary: APIのセルフチェック
      tags:
      - operation
  /posts:
    get:
      operationId: listPosts
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SchemaPostResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Internal Server Error
      summary: 投稿の一覧を取得
      tags:
      - post
  /signin:
    post:
      operationId: signIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaLoginRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaUserResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Internal Server Error
      summary: ユーザのログインを実行
      tags:
      - auth
  /signout:
    post:
      operationId: signOut
      responses:
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Internal Server Error
      security:
      - user auth: []
      summary: ユーザのログアウトを実行
      tags:
      - auth
  /user:
    get:
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaUserResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Internal Server Error
      security:
      - user auth: []
      summary: 現在ログインしているユーザを取得
      tags:
      - auth
  posts/{id}:
    get:
      operationId: getPost
      parameters:
      - in: path
        name: id
        required: true
        schema:
          example: "1"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaPostResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Internal Server Error
      summary: 投稿をIDから取得
      tags:
      - post
  posts/{postId}/comments:
    get:
      operationId: listPostComments
      parameters:
      - in: path
        name: postId
        required: true
        schema:
          example: "1"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SchemaCommentResponse'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Internal Server Error
      summary: 対象の投稿のコメント一覧を取得
      tags:
      - post
    post:
      operationId: createPostComments
      parameters:
      - in: path
        name: postId
        required: true
        schema:
          example: "1"
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchemaCreateCommentRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaCommentResponse'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchemaErrorResponse'
          description: Forbidden
      summary: 対象の投稿のコメントを追加
      tags:
      - post
components:
  schemas:
    SchemaCommentResponse:
      properties:
        body:
          type: string
        created_at:
          format: date-time
          type: string
        id:
          type: integer
        post_id:
          type: integer
        updated_at:
          format: date-time
          type: string
        user_id:
          type: integer
        user_name:
          type: string
      type: object
    SchemaCreateCommentRequest:
      properties:
        body:
          type: string
      type: object
    SchemaErrorResponse:
      properties:
        code:
          type: integer
        message:
          type: string
      type: object
    SchemaLoginRequest:
      properties:
        password:
          type: string
        user_name:
          type: string
      type: object
    SchemaPostResponse:
      properties:
        body:
          type: string
        post_id:
          type: integer
        title:
          type: string
        user_id:
          type: integer
        user_name:
          type: string
      type: object
    SchemaUserResponse:
      properties:
        user_id:
          type: integer
        user_name:
          type: string
      type: object
